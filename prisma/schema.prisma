generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model roles {
  rol_id      Int           @id @default(autoincrement())
  description String
  status      Boolean
  users_x_rol users_x_rol[]
  users       users[]       @relation("users_x_rol")

  @@map("roles")
}

model general_log {
  log_id    Int    @id @default(autoincrement())
  reference String
  user_id   String @db.VarChar(11)
  user      users  @relation(fields: [user_id], references: [dni])

  @@index([user_id])
  @@map("general_logs")
}

model users {
  dni                        String                       @id @db.VarChar(11)
  name                       String
  first_surname              String
  second_surname             String
  phone                      String
  email                      String                       @unique
  departmentId               Int
  status                     Boolean
  password                   String
  diagnosis                  diagnoses[]
  general_log                general_log[]
  incidents                  incidents[]
  log_change_status_incident log_change_status_incident[]
  user_x_incident            user_x_incident[]
  department                 departments                  @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  users_x_rol                users_x_rol[]
  roles                      roles[]                      @relation("users_x_rol")

  @@index([email])
  @@index([departmentId], map: "users_departmentId_fkey")
  @@map("users")
}

model user_x_incident {
  assign_code Int       @id @default(autoincrement())
  user_dni    String    @db.VarChar(11)
  incident_id String    @db.VarChar(12)
  assign_date DateTime
  incident    incidents @relation(fields: [incident_id], references: [incident_id])
  user        users     @relation(fields: [user_dni], references: [dni])

  @@index([user_dni, incident_id])
  @@index([incident_id], map: "user_x_incident_incident_id_fkey")
  @@map("user_x_incident")
}

model log_change_status_incident {
  log_id         Int       @id @default(autoincrement())
  incident_id    String    @db.VarChar(12)
  change_date    DateTime
  current_status Int
  previous_state Int
  user_dni       String    @db.VarChar(11)
  incidents      incidents @relation(fields: [incident_id], references: [incident_id])
  user           users     @relation(fields: [user_dni], references: [dni])

  @@index([incident_id, user_dni])
  @@index([user_dni], map: "log_change_status_incidents_user_dni_fkey")
  @@map("log_change_status_incidents")
}

model users_x_rol {
  user_dni String
  role_id  Int
  roles    roles  @relation(fields: [role_id], references: [rol_id], onDelete: Cascade)
  user     users  @relation(fields: [user_dni], references: [dni], onDelete: Cascade)

  @@id([user_dni, role_id])
  @@index([role_id], map: "users_x_rol_role_id_fkey")
  @@map("users_x_rol")
}

model incident_effects {
  id          Int         @id @default(autoincrement())
  description String
  incidents   incidents[]

  @@map("incident_effects")
}

model incident_categories {
  id          Int         @id @default(autoincrement())
  description String
  incidents   incidents[]

  @@map("incident_categories")
}

model incident_status {
  id          Int         @id @default(autoincrement())
  description String
  incidents   incidents[]

  @@map("incident_status")
}

model incident_risks {
  id          Int         @id @default(autoincrement())
  description String
  incidents   incidents[]

  @@map("incident_risks")
}

model incident_priorities {
  id          Int         @id @default(autoincrement())
  description String
  incidents   incidents[]

  @@map("incident_priorities")
}

model incidents {
  incident_id                String                       @id @db.VarChar(12)
  name                       String
  description                String
  close_justification        String?
  incident_place             String
  record_date                DateTime
  cost                       Float
  time_to_solve              Int
  user_dni                   String                       @db.VarChar(11)
  effect_id                  Int
  risk_id                    Int
  category_id                Int
  priority_id                Int
  status_id                  Int
  diagnosis                  diagnoses[]
  category                   incident_categories          @relation(fields: [category_id], references: [id], onDelete: Cascade)
  effect                     incident_effects             @relation(fields: [effect_id], references: [id], onDelete: Cascade)
  priority                   incident_priorities          @relation(fields: [priority_id], references: [id], onDelete: Cascade)
  risk                       incident_risks               @relation(fields: [risk_id], references: [id], onDelete: Cascade)
  status                     incident_status              @relation(fields: [status_id], references: [id], onDelete: Cascade)
  user                       users                        @relation(fields: [user_dni], references: [dni], onDelete: Cascade)
  log_change_status_incident log_change_status_incident[]
  user_x_incident            user_x_incident[]

  @@index([user_dni])
  @@index([effect_id, risk_id, category_id, priority_id, status_id])
  @@index([category_id], map: "incidents_category_id_fkey")
  @@index([priority_id], map: "incidents_priority_id_fkey")
  @@index([risk_id], map: "incidents_risk_id_fkey")
  @@index([status_id], map: "incidents_status_id_fkey")
  @@map("incidents")
}

model diagnoses {
  diagnosis_id   Int       @id @default(autoincrement())
  diagnosis_date DateTime
  diagnosis      String
  estimated_time Int
  observation    String
  buy            Boolean
  user_dni       String    @db.VarChar(11)
  incident_id    String    @db.VarChar(12)
  incident       incidents @relation(fields: [incident_id], references: [incident_id], onDelete: Cascade)
  user           users     @relation(fields: [user_dni], references: [dni], onDelete: Cascade)

  @@index([user_dni, incident_id])
  @@index([incident_id], map: "diagnosis_incident_id_fkey")
  @@map("diagnosis")
}

model departments {
  id          Int     @id @default(autoincrement())
  description String
  user        users[]
}
